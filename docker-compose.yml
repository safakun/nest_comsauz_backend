version: '3.5'

services:
  main:
    container_name: main
    build:
      context: .
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 5000:5000
      - 9229:9229
    command: npm run start:dev
    depends_on:
      - postgres
    restart: always
  postgres:
    container_name: postgres
    image: postgres:12
    env_file:
      - .development.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata:






# version: '3.5'

# services:
#   postgres:
#     container_name: postgres_container
#     image: postgres
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER:-postgres}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
#       PGDATA: /data/postgres
#     volumes:
#        - postgres:/data/postgres
#     ports:
#       - "5432:5432"
#     networks:
#       - postgres
#     restart: unless-stopped
  
#   pgadmin:
#     container_name: pgadmin_container
#     image: dpage/pgadmin4
#     environment:
#       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#       PGADMIN_CONFIG_SERVER_MODE: 'False'
#     volumes:
#        - pgadmin:/var/lib/pgadmin

#     ports:
#       - "${PGADMIN_PORT:-5050}:80"
#     networks:
#       - postgres
#     restart: unless-stopped

# networks:
#   postgres:
#     driver: bridge

# volumes:
#     postgres:
#     pgadmin:









